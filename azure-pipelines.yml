# # SETUP STEPS
# nightvision app create -n dvcsa
# nightvision target create -n dvcsa -u https://localhost:8999 --type api
# nightvision swagger extract ./ -t dvcsa --lang spring 

## not required for this app, but an example of authentication setup
# nightvision auth playwright create -u $YOURURL -n $YOURAPP

## local scan command example
# nightvision scan -t dvcsa -a dvcsa

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Test
  jobs:
  - job: BuildAndTest
    steps:
    - checkout: self
      displayName: 'Clone Code'

    - script: |
        wget -c https://downloads.nightvision.net/binaries/latest/nightvision_latest_linux_amd64.tar.gz -O - | tar -xz
        sudo mv nightvision /usr/local/bin/
        python -m pip install semgrep --user
      displayName: 'Install NightVision'

    - script: |
        nightvision swagger extract ./ -t $NIGHTVISION_TARGET --lang dotnet || true
        if [ ! -e openapi-spec.yml ]; then
          cp backup-openapi-spec.yml openapi-spec.yml
        fi
      displayName: 'Extract API Documentation from Code'
      env:
        NIGHTVISION_TOKEN: $(NIGHTVISION_TOKEN)
        NIGHTVISION_TARGET: dvcsa

    - script: |
        docker-compose up -d
        sleep 20
        curl -k https://localhost:8998
      displayName: 'Start the App'

    - script: |
        nightvision scan -t $NIGHTVISION_TARGET -a $NIGHTVISION_APP --auth $NIGHTVISION_AUTH > scan-results.txt
        nightvision export sarif -s "$(head -n 1 scan-results.txt)" --swagger-file openapi-spec.yml
      displayName: 'Scan the API'
      env:
        NIGHTVISION_TOKEN: $(NIGHTVISION_TOKEN)
        NIGHTVISION_TARGET: dvcsa
        NIGHTVISION_APP: dvcsa
        NIGHTVISION_AUTH: dvcsa

    #convert SARIF to Azure DevOps logging commands
    - script: |
        wget -O sarif_to_azure_devops.py https://gist.githubusercontent.com/alex-nightvision/e98e8e9ced40f1b27ec5899544a3c514/raw/2275b3ffa4cc43df9df6aa80994d00dc6556f2f3/sarif_to_azure_devops.py
        python sarif_to_azure_devops.py
      displayName: 'Convert SARIF to Azure DevOps Logging Commands'
      env:
        PYTHONUNBUFFERED: 1

    # # Download and prepare nightvision_azure_importer script
    # - script: |
    #     wget -O nightvision_azure_importer.py https://raw.githubusercontent.com/jxbt/nightvision_azure_importer/main/nightvision_azure_importer.py
    #     wget -O nightvision_azure_importer_requirements.txt https://raw.githubusercontent.com/jxbt/nightvision_azure_importer/main/requirements.txt
    #     sudo apt-get update
    #     sudo apt-get install -y python3-pip
    #     python3 -m pip install -r nightvision_azure_importer_requirements.txt
    #   displayName: 'Prepare Python Script and Dependencies'

    # # Execute the Python script to import SARIF into Azure DevOps work items
    # - script: |
    #     python3 nightvision_azure_importer.py --organization $organization --project $project --patoken $pa_token --sarif results.sarif
    #   displayName: 'Import SARIF to Azure DevOps'
    #   env:
    #     organization: $(ORGANIZATION_NAME)
    #     project: $(PROJECT_NAME)
    #     pa_token: $(PERSONAL_ACCESS_TOKEN)
